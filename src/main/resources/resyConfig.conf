############
# ResyKeys #
############
# Your user profile API key. Can be found once you're logged into Resy in most "api.resy.com" network
# calls (i.e. Try they "/find" API call when visiting a restaurant). Open your web console and look for a request header
# called "authorization".
# e.g.
# resyKeys.api-key="MY_API_KEY"
resyKeys.api-key=
# Your user profile authentication token when logging into Resy. Can be found once you're logged into
# Resy in most "api.resy.com" network calls (i.e. Try the "/find" API call when visiting a restaurant). Open your web
# console and look for a request header called "x-resy-auth-token".
# e.g.
# resyKeys.auth-token="MY_AUTH_TOKEN"
resyKeys.auth-token=

######################
# ReservationDetails #
######################
# The date you want to make the reservation in YYYY-MM-DD format. This should be set to the day after the
# last available day with restaurant reservations as this is the day you want to snipe for a reservation once they
# become available.
# e.g.
# resDetails.date="2099-01-30"
resDetails.date=
# Size of the party reservation
# e.g.
# resDetails.party-size=2
resDetails.party-size=
# The unique identifier of the restaurant you want to make the reservation at. Can be found when viewing
# available reservations for a restaurant as a query parameter in the `/find` API call if you have the web console open.
# e.g.
# resDetails.venue-id=123
resDetails.venue-id=
# Priority list of reservation times and table types. Time is in military time HH:MM:SS format. This
# allows full flexibility on your reservation preferences. For example, your priority order of reservations can be...
#   * 18:00 - Dining Room
#   * 18:00 - Patio
#   * 18:15
#   If you have no preference on table type, then simply don't set it and the bot will pick a reservation for that time
#   slot regardless of the table type.
# e.g.
# resDetails.res-time-types=[
#     {reservation-time="18:00:00", table-type="Dining Room"},
#     {reservation-time="18:00:00", table-type="Patio"},
#     {reservation-time="18:15:00"}
# ]
resDetails.res-time-types=

#############
# mode #
#############
# The mode the bot will run in. Can be either "once", "scheduled", or "loop".
#   * "once" - The bot will run once and exit.
#   * "scheduled" - The bot will run once and then wait until the scheduled time to run again.
#   * "loop" - The bot will run once and then wait until the retry time to run again.
runDetails.mode=

#############
# scheduled #
#############
# Hour of the day when reservations become available and when you want to snipe
# e.g.
# runDetails.scheduled.hours=9
runDetails.scheduled.hours=
# Minute of the day when reservations become available and when you want to snipe
# e.g.
# runDetails.scheduled.minutes=0
runDetails.scheduled.minutes=

#############
# loop #
#############
# How much time between retries in seconds.
# e.g.
# runDetails.loop.interval=5
runDetails.loop.interval=
# How many times to retry before giving up. Set to -1 to retry indefinitely.
# e.g.
# runDetails.loop.max-retries=5
runDetails.loop.max-retries=
